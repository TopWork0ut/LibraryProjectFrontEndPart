{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\n// import { CLIENT_ID } from \"./GetAccessToken\";\n// import { AUTH_SERVER_ADDRESS } from \"./GetAccessToken\";\nimport axios from 'axios';\n// import { BEARER_HEADER_PREFIX } from \"./Request\";\n\nexport default function Logout() {\n  _s();\n  const access_token = localStorage.getItem(\"access_token\");\n  useEffect(() => {\n    // const makeRequestAndRedirect = async () => {\n    //     try {\n    //       const response = await fetch('http://localhost:8090/realms/LibraryAppClient/protocol/openid-connect/logout', {\n    //         method: 'GET', // or 'POST' depending on your needs\n    //         headers: {\n    //           'Authorization': `Bearer ${access_token}`,\n    //           'Content-Type': 'application/json',\n    //           // Add other headers as needed\n    //         },\n    //       });\n\n    //       if (response.ok) {\n    //         const data = await response.json();\n    //         // Assuming 'data.redirectUrl' contains the URL to redirect to\n    //         window.location.assign(data.redirectUrl);\n    //       } else {\n    //         console.error('Failed to fetch data:', response.statusText);\n    //       }\n    //     } catch (error) {\n    //       console.error('Error:', error);\n    //     }\n    //   };\n\n    //   makeRequestAndRedirect();\n    window.location.assign(`http://localhost:8090/realms/LibraryAppRealm/protocol/openid-connect/logout`);\n  }, []);\n}\n_s(Logout, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["useEffect","axios","Logout","_s","access_token","localStorage","getItem","window","location","assign","_c","$RefreshReg$"],"sources":["D:/nulp/6_semester/PZ-documenting/project/frontend/LibraryProjectFrontEndPart/my-react-app/src/requests/Logout.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\n// import { CLIENT_ID } from \"./GetAccessToken\";\r\n// import { AUTH_SERVER_ADDRESS } from \"./GetAccessToken\";\r\nimport axios from 'axios';\r\n// import { BEARER_HEADER_PREFIX } from \"./Request\";\r\n\r\n\r\nexport default function Logout(){\r\n    const access_token = localStorage.getItem(\"access_token\")\r\n\r\n    useEffect(() => {\r\n        // const makeRequestAndRedirect = async () => {\r\n        //     try {\r\n        //       const response = await fetch('http://localhost:8090/realms/LibraryAppClient/protocol/openid-connect/logout', {\r\n        //         method: 'GET', // or 'POST' depending on your needs\r\n        //         headers: {\r\n        //           'Authorization': `Bearer ${access_token}`,\r\n        //           'Content-Type': 'application/json',\r\n        //           // Add other headers as needed\r\n        //         },\r\n        //       });\r\n      \r\n        //       if (response.ok) {\r\n        //         const data = await response.json();\r\n        //         // Assuming 'data.redirectUrl' contains the URL to redirect to\r\n        //         window.location.assign(data.redirectUrl);\r\n        //       } else {\r\n        //         console.error('Failed to fetch data:', response.statusText);\r\n        //       }\r\n        //     } catch (error) {\r\n        //       console.error('Error:', error);\r\n        //     }\r\n        //   };\r\n      \r\n        //   makeRequestAndRedirect();\r\n        window.location.assign(`http://localhost:8090/realms/LibraryAppRealm/protocol/openid-connect/logout`)\r\n    }, []);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB;;AAGA,eAAe,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EAC5B,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAEzDN,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACAO,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAE,6EAA4E,CAAC;EACzG,CAAC,EAAE,EAAE,CAAC;AAEV;AAACN,EAAA,CA/BuBD,MAAM;AAAAQ,EAAA,GAANR,MAAM;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}