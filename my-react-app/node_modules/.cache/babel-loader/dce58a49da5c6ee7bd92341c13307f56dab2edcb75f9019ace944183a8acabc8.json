{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport qs from 'qs';\nexport const AUTH_SERVER_ADDRESS = \"http://localhost:8090\";\nexport const CLIENT_ID = \"LibraryAppClient\";\nconst REDIRECT_URL = \"http://localhost:3000/get-access-token-by-code\";\nconst CLIENT_SECRET = \"vqMQIxHnbyVga77QOped0i1uh0Ewn94u\";\nconst CODE_CHALLENGE = \"61dcd90c-01e1-4a01-a40a-11538f121c08.a4ceddf2-4a25-482d-9f75-0681b0c6e13b.6e7a8a21-bdb5-49e8-8f6b-8491267a0c90\";\nexport default function GetAccessToken() {\n  _s();\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n  useEffect(() => {\n    const code = searchParams.get(\"code\");\n    const xWwwformUrlencodedData = {\n      grant_type: \"authorization_code\",\n      client_id: CLIENT_ID,\n      redirect_uri: REDIRECT_URL,\n      client_secret: CLIENT_SECRET,\n      code_challenge: CODE_CHALLENGE,\n      code: code\n    };\n\n    // const options = {\n    //     method: 'POST',\n    //     headers: { 'content-type': 'application/x-www-form-urlencoded', \n    //         'Access-Control-Allow-Origin': '*',\n    //         'Access-Control-Allow-Headers': '*',\n    //         'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n    //      },\n    //     data: qs.stringify(xWwwformUrlencodedData),\n    //     url: `${AUTH_SERVER_ADDRESS}/realms/LibraryAppRealm/protocol/openid-connect/token`\n    // };\n\n    // const result = axios(options).then((res) => {\n\n    // })\n\n    console.log(\"RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\");\n    axios.post(`${AUTH_SERVER_ADDRESS}/realms/LibraryAppRealm/protocol/openid-connect/token`, {\n      headers: {\n        'content-type': 'application/x-www-form-urlencoded',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Headers': '*',\n        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n      },\n      data: qs.stringify(xWwwformUrlencodedData)\n    }).then(res => {\n      console.log('================================');\n      console.log(res);\n      navigate('/');\n    });\n    console.log(\"RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR11111111111111\");\n  }, [navigate]);\n}\n_s(GetAccessToken, \"v8hQjlU8qJmeVDPESM/FtpABWjw=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = GetAccessToken;\nvar _c;\n$RefreshReg$(_c, \"GetAccessToken\");","map":{"version":3,"names":["useEffect","useNavigate","useSearchParams","axios","qs","AUTH_SERVER_ADDRESS","CLIENT_ID","REDIRECT_URL","CLIENT_SECRET","CODE_CHALLENGE","GetAccessToken","_s","navigate","searchParams","setSearchParams","code","get","xWwwformUrlencodedData","grant_type","client_id","redirect_uri","client_secret","code_challenge","console","log","post","headers","data","stringify","then","res","_c","$RefreshReg$"],"sources":["D:/nulp/6_semester/PZ-documenting/project/frontend/LibraryProjectFrontEndPart/my-react-app/src/requests/GetAccessToken.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nexport const AUTH_SERVER_ADDRESS = \"http://localhost:8090\"\r\nexport const CLIENT_ID = \"LibraryAppClient\"\r\nconst REDIRECT_URL = \"http://localhost:3000/get-access-token-by-code\"\r\nconst CLIENT_SECRET = \"vqMQIxHnbyVga77QOped0i1uh0Ewn94u\"\r\nconst CODE_CHALLENGE = \"61dcd90c-01e1-4a01-a40a-11538f121c08.a4ceddf2-4a25-482d-9f75-0681b0c6e13b.6e7a8a21-bdb5-49e8-8f6b-8491267a0c90\"\r\n\r\nexport default function GetAccessToken(){\r\n    const navigate = useNavigate()\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n    useEffect(() => {\r\n\r\n            const code = searchParams.get(\"code\")\r\n\r\n            const xWwwformUrlencodedData = {\r\n                grant_type: \"authorization_code\",\r\n                client_id: CLIENT_ID,\r\n                redirect_uri: REDIRECT_URL,\r\n                client_secret: CLIENT_SECRET,\r\n                code_challenge: CODE_CHALLENGE,\r\n                code: code\r\n            }\r\n\r\n            // const options = {\r\n            //     method: 'POST',\r\n            //     headers: { 'content-type': 'application/x-www-form-urlencoded', \r\n            //         'Access-Control-Allow-Origin': '*',\r\n            //         'Access-Control-Allow-Headers': '*',\r\n            //         'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\r\n            //      },\r\n            //     data: qs.stringify(xWwwformUrlencodedData),\r\n            //     url: `${AUTH_SERVER_ADDRESS}/realms/LibraryAppRealm/protocol/openid-connect/token`\r\n            // };\r\n\r\n            // const result = axios(options).then((res) => {\r\n                \r\n                \r\n            // })\r\n\r\n            console.log(\"RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\")\r\n\r\n            axios.post(`${AUTH_SERVER_ADDRESS}/realms/LibraryAppRealm/protocol/openid-connect/token`, \r\n                    {\r\n                        headers: { 'content-type': 'application/x-www-form-urlencoded', \r\n                            'Access-Control-Allow-Origin': '*',\r\n                            'Access-Control-Allow-Headers': '*',\r\n                            'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\r\n                        },\r\n                        data: qs.stringify(xWwwformUrlencodedData)\r\n                    }).then((res) => {\r\n                        console.log('================================')\r\n                        console.log(res)\r\n                        navigate('/')\r\n                    })\r\n\r\n            console.log(\"RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR11111111111111\")        \r\n            \r\n        \r\n\r\n        \r\n    }, [navigate]);\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,IAAI;AAEnB,OAAO,MAAMC,mBAAmB,GAAG,uBAAuB;AAC1D,OAAO,MAAMC,SAAS,GAAG,kBAAkB;AAC3C,MAAMC,YAAY,GAAG,gDAAgD;AACrE,MAAMC,aAAa,GAAG,kCAAkC;AACxD,MAAMC,cAAc,GAAG,gHAAgH;AAEvI,eAAe,SAASC,cAAcA,CAAA,EAAE;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGZ,eAAe,CAAC,CAAC;EAEzDF,SAAS,CAAC,MAAM;IAER,MAAMe,IAAI,GAAGF,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC;IAErC,MAAMC,sBAAsB,GAAG;MAC3BC,UAAU,EAAE,oBAAoB;MAChCC,SAAS,EAAEb,SAAS;MACpBc,YAAY,EAAEb,YAAY;MAC1Bc,aAAa,EAAEb,aAAa;MAC5Bc,cAAc,EAAEb,cAAc;MAC9BM,IAAI,EAAEA;IACV,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAGA;;IAEAQ,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;IAE7DrB,KAAK,CAACsB,IAAI,CAAE,GAAEpB,mBAAoB,uDAAsD,EAChF;MACIqB,OAAO,EAAE;QAAE,cAAc,EAAE,mCAAmC;QAC1D,6BAA6B,EAAE,GAAG;QAClC,8BAA8B,EAAE,GAAG;QACnC,8BAA8B,EAAE;MACpC,CAAC;MACDC,IAAI,EAAEvB,EAAE,CAACwB,SAAS,CAACX,sBAAsB;IAC7C,CAAC,CAAC,CAACY,IAAI,CAAEC,GAAG,IAAK;MACbP,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/CD,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAChBlB,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC;IAEVW,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;EAKnF,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;AAIlB;AAACD,EAAA,CA1DuBD,cAAc;EAAA,QACjBT,WAAW,EACYC,eAAe;AAAA;AAAA6B,EAAA,GAFnCrB,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}